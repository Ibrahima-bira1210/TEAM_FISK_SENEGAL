{"version":3,"sources":["propsFlattener.tsx"],"names":["SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_10","SPECIFICITY_1","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_loading","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","compareSpecificity","exisiting","upcoming","ignorebaseTheme","condition","length","index","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","flattenProps","specificityMap","propertySpecity","includes","undefined","startsWith","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\nconst SPECIFICITY_10 = 10;\nconst SPECIFICITY_1 = 1;\nconst specificityPrecedence = [\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_10,\n  SPECIFICITY_1,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_10]: 0,\n  [SPECIFICITY_1]: 0,\n};\n\nconst pseudoPropsMap: any = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n};\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: any) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_1]: priority,\n        };\n\n    if (\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android'].includes(property)\n    ) {\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        propertySpecity[pseudoPropsMap[property].priority]++;\n\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n    } else if (state[pseudoPropsMap[property]?.respondTo] === undefined) {\n      if (property.startsWith('_')) {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          specificityMap[property] = propertySpecity;\n          // merging internal props (like, _text, _checked, ...)\n          flattenProps[property] = merge(\n            {},\n            flattenProps[property],\n            props[property]\n          );\n        } else {\n          flattenProps[property] = merge(\n            {},\n            props[property],\n            flattenProps[property]\n          );\n        }\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        }\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  // STEP 1.a (if): Check weather it should be recursively resolved\n  // NOTE: (when true) recursively resolved it\n  // STEP 1.b (else if): Check specificty\n  // STEP 1.b.i: Check for pseudo props\n  // NOTE: (when true) Merge it.\n  // NOTE: (when false) Replace it.\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]}