{"version":3,"sources":["input.ts"],"names":["getSelectionColor","props","Platform","OS","baseStyle","selectionColor","fontFamily","p","borderRadius","color","placeholderTextColor","background","borderColor","_disabled","opacity","bg","_invalid","_focus","_web","outlineWidth","lineHeight","roundedStyle","borderWidth","_hover","outlineStyle","filledStyle","unstyledStyle","underlinedStyle","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input"],"mappings":"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","sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nfunction getSelectionColor(props: Record<string, any>) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = (props: Record<string, any>) => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    background: 'transparent',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props),\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props),\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props),\n    },\n    _web: {\n      outlineWidth: '0',\n      lineHeight: 'lg', // Todo: Move to _web inside size so that sm and xs don't have this much height\n    },\n  };\n};\n\nfunction roundedStyle(props: Record<string, any>) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props),\n    },\n  };\n}\nfunction outlineStyle(props: Record<string, any>) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props),\n    },\n  };\n}\nfunction filledStyle(props: Record<string, any>) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props),\n    },\n  };\n}\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0',\n  };\n}\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderBottomWidth: '1',\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle,\n};\n\nconst sizes = {\n  '2xl': { fontSize: 'xl' },\n  'xl': { fontSize: 'lg' },\n  'lg': { fontSize: 'md' },\n  'md': { fontSize: 'sm' },\n  'sm': { fontSize: 'xs' },\n  'xs': { fontSize: '2xs' },\n};\n\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline',\n};\n\n// Input\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes,\n};\n\nexport default {};\n"]}